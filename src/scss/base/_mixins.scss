//remove floats
@mixin clearfix() {

    *zoom: 1;

    &:before, &:after {

        content: " ";
        display: table;
    }

    &:after {

        clear: both;
    }
}

//set opacity
@mixin opacity($opacity) {
    
    $opacity-ie: $opacity * 100;

    opacity: $opacity;
    filter: alpha(opacity=$opacity-ie); //IE8
}

//center horizontally
@mixin auto-center() {
    
    display: block;
    margin: 0 auto;
}

//center absolute elements
@mixin absolute-center($position) {
    
    position: absolute;

    @if $position == 'vertical' {

        top: 50%;
        transform: translateY(-50%);
    }

    @else if $position =='horizontal' {

        left: 50%;
        transform: translateX(-50%);
    }

    @else if $position == 'both' {

        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}

//rem font sizing
@mixin font-size($size, $base: 16) {

    font-size: $size; // fallback for old browsers
    font-size: ($size / $base) * 1rem;
}

//media query
@mixin mq($size, $type:min, $pixels: $breakpoint-xs) {
    
    @if $size == 'xs' {

        @media screen and ($type + -width:$breakpoint-xs){
            
            @content;
        }
    }

    @else if $size == 'sm' {

        @media screen and ($type + -width:$breakpoint-sm){
            
            @content;
        }
    }

    @else if $size == 'md' {
        
        @media screen and ($type + -width:$breakpoint-md){
            
            @content;
        }
    }

    @else if $size == 'lg' {
        
        @media screen and ($type + -width:$breakpoint-lg){
            
            @content;
        }
    }

    @else if $size == 'custom' {
        
        @media screen and ($type + -width:$pixels + px){
            
            @content;
        }
    }

    @else {

        @content;
    }
}

/* placeholder */
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

/* Link colors */
@mixin link($color, $hover, $visited, $focus, $active) {

    color: $color;

    &:hover {
        color: $hover;
    }

    &:visited {
        color: $visited;
    }
    &:focus {
        color: $focus;
    }

    &:active {
        color: $active;
    }
}

/* Font colors */
@mixin colors($colors) {

    .color {

        @each $color,$value in $colors {

            &--#{$color} {
                color: #{$value};
            }
        }
    }
}

/* Background Colors */
@mixin backgrounds($colors) {

    .bg {

        @each $color,$value in $colors {

            &--#{$color} {
                background-color: #{$value};
            }
        }
    }
}
/* paddings and margins */
@mixin spacing {

    $max-step: 120;
    $count: 0;
    $step: 5;
    $sides: (top, bottom, left, right);
    $total-steps: $max-step / $step;
    $unit: '';
    @for $i from 1 through $total-steps {

        @if $count != 0 {
            $unit: px;
        }
        
        .m-#{$count} {
            margin: #{$count}#{$unit} !important;
        }
        .p-#{$count} {
            padding: #{$count}#{$unit} !important;
        }

        @each $side in $sides {

            .m#{str-slice($side, 0, 1)}-#{$count} {
                margin-#{$side}: #{$count}#{$unit} !important;
            }

            .p#{str-slice($side, 0, 1)}-#{$count} {
                padding-#{$side}: #{$count}#{$unit} !important;
            }
        }

        $count: $count + $step;
    }
}